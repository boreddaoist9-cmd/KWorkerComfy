name: Development
on:
  workflow_dispatch:
#  push:
#    branches-ignore:
#      - main
jobs:
  dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true
          docker-images: false
      
      - name: Verify available space
        run: |
          echo "Disk space after cleanup:"
          df -h /
          echo ""
          echo "Available space:"
          df -BG / | awk 'NR==2 {print "Free: " $4}'
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set environment variables
        run: |
          echo "DOCKERHUB_REPO=${{ vars.DOCKERHUB_REPO }}" >> $GITHUB_ENV
          echo "DOCKERHUB_IMG=${{ vars.DOCKERHUB_IMG }}" >> $GITHUB_ENV
          echo "HUGGINGFACE_ACCESS_TOKEN=${{ secrets.HUGGINGFACE_ACCESS_TOKEN }}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${GITHUB_REF##refs/heads/}" | sed 's/\//-/g' >> $GITHUB_ENV
      
      - name: Build and push the images to Docker Hub
        uses: docker/bake-action@v2
        with:
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.args.DOCKERHUB_REPO=${{ env.DOCKERHUB_REPO }}
            *.args.DOCKERHUB_IMG=${{ env.DOCKERHUB_IMG }}
            *.args.RELEASE_VERSION=${{ env.RELEASE_VERSION }}
            *.args.HUGGINGFACE_ACCESS_TOKEN=${{ env.HUGGINGFACE_ACCESS_TOKEN }}
